{"version":3,"sources":["../src/index.js"],"names":["STATUS_REQUEST","STATUS_SUCCESS","STATUS_FAILURE","fetchMiddleware","createSyncFetchMiddleware","dispatchErrorMiddleware","dispatchError","callback","dispatch","getState","action","endpoint","syncEvents","status","next","syncEvent","payload","code","message","error","response","fetch","err","statusText","json","success","msg","data","JSON","stringify"],"mappings":"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","file":"index.js","sourcesContent":["/* global fetch */\n\nimport assign from 'lodash/assign'\n\nconst STATUS_REQUEST = 'request'\nconst STATUS_SUCCESS = 'success'\nconst STATUS_FAILURE = 'failure'\nconst fetchMiddleware = createSyncFetchMiddleware()\nlet dispatchErrorMiddleware = () => { return false }\nlet dispatchError = (callback) => {\n  dispatchErrorMiddleware = callback\n}\n\nlet createSyncFetchMiddleware = () => {\n  return ({ dispatch, getState }) => next => async (action) => {\n    if (!action || (!action.endpoint && !action.syncEvents) || action.status) return next(action)\n    if (action && action.syncEvents && action.action) {\n      action.action(getState, action.syncEvents, (syncEvent) => {\n        dispatch(assign({}, syncEvent, {\n          status: STATUS_REQUEST\n        }))\n      }, (syncEvent, payload) => {\n        if (payload && payload.code && payload.message) {\n          if (!dispatchErrorMiddleware(payload)) {\n            dispatch(assign({}, syncEvent, {\n              status: STATUS_FAILURE,\n              error: payload\n            }))\n          }\n        } else {\n          dispatch(assign({}, syncEvent, {\n            status: STATUS_SUCCESS,\n            payload: payload\n          }))\n        }\n      })\n    } else if (action && action.endpoint) {\n      dispatch(assign({}, action, {\n        status: STATUS_REQUEST\n      }))\n      let response\n      try {\n        response = await fetch(action.endpoint, action)\n        if (response && response.status >= 400) {\n          let err = {code: response.status, message: response.statusText}\n          throw err\n        }\n        response = await response.json()\n        if (!response.success) {\n          let err = {code: response.code, message: response.msg}\n          throw err\n        }\n        dispatch(assign({}, action, {\n          status: STATUS_SUCCESS,\n          payload: response.data\n        }))\n      } catch (error) {\n        if (error && error.code && error.message) {\n          if (!dispatchErrorMiddleware(response.data)) {\n            dispatch(assign({}, action, {\n              status: STATUS_FAILURE,\n              error: response.data\n            }))\n          }\n        } else {\n          dispatch(assign({}, action, {\n            status: STATUS_FAILURE,\n            error: {code: -1, message: JSON.stringify(error)}\n          }))\n        }\n      }\n    }\n  }\n}\n\nexport default fetchMiddleware\nexport {\n  STATUS_REQUEST,\n  STATUS_SUCCESS,\n  STATUS_FAILURE,\n  dispatchError\n}\n\n"]}